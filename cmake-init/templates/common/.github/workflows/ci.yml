name: Continuous Integration

on:
  push:
    branches:
    - master

  pull_request:
    branches:
    - master

jobs:
  coverage:
    runs-on: ubuntu-latest

    # To enable coverage, go to https://codecov.io/, acquire a token, put it
    # into your secrets (Settings > Secrets > New repository secret) and delete
    # the "if" conditional below.
    # If you do not wish to use codecov, then simply delete this job from the
    # workflow.
    if: "false"

    steps:
    - uses: actions/checkout@v1

    - name: Install LCov
      run: sudo apt-get update -q
        && sudo apt-get install lcov -q -y

    - name: Configure
      run: cmake --preset=ci-coverage

    - name: Build
      run: cmake --build build/coverage -j 2

    - name: Test
      run: ctest --test-dir build/coverage --output-on-failure -j 2

    - name: Process coverage info
      run: |
        cmake --build build/coverage -t coverage
        bash <(curl -s https://codecov.io/bash) -f build/coverage/coverage.info

  sanitize:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Configure
      env: { CXX: clang++-11 }
      run: cmake --preset=ci-sanitize

    - name: Build
      run: cmake --build build/sanitize -j 2

    - name: Test
      env:
        ASAN_OPTIONS: "strict_string_checks=1:\
          detect_stack_use_after_return=1:\
          check_initialization_order=1:\
          strict_init_order=1:\
          detect_leaks=1"
        UBSAN_OPTIONS: print_stacktrace=1
      run: ctest --test-dir build/sanitize --output-on-failure -j 2

  test:
    strategy:
      matrix:
        os: [macos, ubuntu, windows]{type shared}

        type: [shared, static]

        include:
        - { type: shared, shared: YES }
        - { type: static, shared: NO }{end}

    runs-on: ${{ matrix.os }}-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install static analyzers
      if: matrix.os == 'ubuntu'
      run: sudo apt-get install clang-tidy cppcheck -y -q

    - name: Configure
      run: cmake --preset=ci-${{ matrix.os }}{type shared}
        -D BUILD_SHARED_LIBS=${{ matrix.shared }}{end}

    - name: Build
      run: cmake --build build --config Release -j 2

    - name: Install
      run: cmake --install build --config Release --prefix prefix

    - name: Test
      run: ctest --test-dir build --output-on-failure -C Release -j 2
