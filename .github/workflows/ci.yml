name: Continuous Integration

on:
  push:
    branches:
    - master

  pull_request:
    branches:
    - master

jobs:
  shared_static:
    strategy:
      fail-fast: false

      matrix:
        type: [shared, static]

        os: [macos, ubuntu, windows]

        include:
        - { type: shared, build: YES }
        - { type: static, build: NO }

    name: "Library: ${{ matrix.type }} (${{ matrix.os }})"

    runs-on: ${{ matrix.os }}-latest

    steps:
    - uses: actions/checkout@v1

    - uses: actions/setup-python@v2
      with: { python-version: "3.x" }

    - name: Create project
      run: python cmake-init.py create -s proj

    - name: Configure
      working-directory: proj
      run: cmake --preset=ci-${{ matrix.os }}
        -D BUILD_SHARED_LIBS=${{ matrix.build }}

    - name: Build
      working-directory: proj
      run: cmake --build build --config Release

    - name: Install
      working-directory: proj
      run: cmake --install build --config Release --prefix prefix

    - name: Test
      working-directory: proj/build
      run: ctest -C Release

  other:
    strategy:
      fail-fast: false

      matrix:
        type: [-e, -ho]

        os: [macos, ubuntu, windows]

        include:
        - { type: -e, name: Executable }
        - { type: -ho, name: "Library: header-only" }

    name: ${{ matrix.name }} (${{ matrix.os }})

    runs-on: ${{ matrix.os }}-latest

    steps:
    - uses: actions/checkout@v1

    - uses: actions/setup-python@v2
      with: { python-version: "3.x" }

    - name: Create project
      run: python cmake-init.py create ${{ matrix.type }} proj

    - name: Configure
      working-directory: proj
      run: cmake --preset=ci-${{ matrix.os }}

    - name: Build
      working-directory: proj
      run: cmake --build build --config Release

    - name: Install
      working-directory: proj
      run: cmake --install build --config Release --prefix prefix

    - name: Test
      working-directory: proj/build
      run: ctest -C Release
